"use strict";Object.defineProperties(exports,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}});const k=require("axios");class q{constructor(e){this.client=e}async getAddress(){return this.client._request("post","/address")}async getBtcBalance(e={}){return this.client._request("post","/btcbalance",e)}async sendBtc(e){return this.client._request("post","/sendbtc",e)}async createUtxos(e={}){return this.client._request("post","/createutxos",e)}async estimateFee(e){return this.client._request("post","/estimatefee",e)}async listOnchainTransactions(e={}){return this.client._request("post","/listtransactions",e)}async listUnspents(e={}){return this.client._request("post","/listunspents",e)}}class b{constructor(e){this.client=e,this.rgbTransactionSubscriptions=new Map,this.rgbTransactionPollingIntervals=new Map}async getAssetBalance(e){return this.client._request("post","/assetbalance",e)}async getAssetMetadata(e){return this.client._request("post","/assetmetadata",e)}async listAssets(e={}){const t={filter_asset_schemas:e.filter_asset_schemas};return this.client._request("post","/listassets",t)}async listTransactions(e={}){return this.client._request("post","/listtransfers",e)}async issueAssetCfa(e){return this.client._request("post","/issueassetcfa",e)}async issueAssetNia(e){return this.client._request("post","/issueassetnia",e)}async issueAssetUda(e){return this.client._request("post","/issueassetuda",e)}async sendAsset(e){return this.client._request("post","/sendasset",e)}async createRgbInvoice(e){const t={asset_id:e.asset_id,duration_seconds:e.duration_seconds,min_confirmations:e.min_confirmations};return this.client._request("post","/rgbinvoice",t)}async payRgbInvoice(e){const t=await this.decodeRgbInvoice({invoice:e.invoice}),n={recipient_id:t.recipient_id,asset_id:t.asset_id,amount:t.amount,fee_rate:e.fee_rate,skip_sync:e.skip_sync,transport_endpoints:e.transport_endpoints||t.transport_endpoints||[]};return this.sendAsset(n)}async decodeRgbInvoice(e){return this.client._request("post","/decodergbinvoice",e)}async failTransfers(e){return this.client._request("post","/failtransfers",e)}async getAssetMedia(e){return this.client._request("post","/getassetmedia",e)}async refreshTransfers(e={}){const t={skip_sync:e.skip_sync};return this.client._request("post","/refreshtransfers",t)}async syncRgbWallet(){return this.client._request("post","/sync",{})}async postAssetMedia(e){const t=new FormData;return t.append("file",e.file),this.client._request("post","/postassetmedia",t)}subscribeToRgbTransactions(e){const{onTransaction:t,onError:n,pollingInterval:c=5e3,maxStoredIds:p=1e3,skipInitialFetch:o=!1}=e;if(!t||typeof t!="function")throw new Error("onTransaction callback is required and must be a function");c<1e3&&console.warn("Warning: Polling interval less than 1000ms may cause performance issues");const h=`rgb-tx-${Date.now()}-${Math.random().toString(36).substr(2,9)}`;let w=Date.now();const l=new Set,u=new Map,m=a=>typeof a=="string"?new Date(a).getTime():a||0,_=()=>{if(l.size<=p)return;[...u.entries()].sort((r,f)=>r[1]-f[1]).map(r=>r[0]).slice(0,l.size-p).forEach(r=>{l.delete(r),u.delete(r)})};o||this.listTransactions().then(a=>{a&&a.transfers&&Array.isArray(a.transfers)&&(a.transfers.forEach(s=>{l.add(s.idx),u.set(s.idx,m(s.created_at))}),_())}).catch(a=>{n&&typeof n=="function"&&n(a)});let y=c,d=0;const i=setInterval(async()=>{try{const a=await this.listTransactions();if(a&&a.transfers&&Array.isArray(a.transfers)){const s=a.transfers.filter(r=>{if(!l.has(r.idx))return l.add(r.idx),u.set(r.idx,m(r.created_at)),!0;const f=m(r.created_at);return l.has(r.idx)&&f>(u.get(r.idx)||0)?(u.set(r.idx,f),!0):!1});if(a.transfers.length>0){const r=Math.max(...a.transfers.map(f=>m(f.created_at)));w=Math.max(w,r)}if(_(),s.length>0)s.forEach(r=>{t(r)}),d=0;else if(d++,d>5){const r=Math.min(c*3,c*(1+d/10));if(r!==y){y=r,clearInterval(i);const f=setInterval(i.callback,y);this.rgbTransactionPollingIntervals.set(h,f)}}}}catch(a){n&&typeof n=="function"&&n(a)}},c);return i.callback=i._onTimeout,this.rgbTransactionSubscriptions.set(h,{onTransaction:t,onError:n,pollingInterval:c,currentPollingInterval:y,maxStoredIds:p}),this.rgbTransactionPollingIntervals.set(h,i),h}unsubscribeFromRgbTransactions(e){if(!this.rgbTransactionSubscriptions.has(e))return!1;const t=this.rgbTransactionPollingIntervals.get(e);return t&&(clearInterval(t),this.rgbTransactionPollingIntervals.delete(e)),this.rgbTransactionSubscriptions.delete(e),!0}}class I{constructor(e){this.client=e,this.paymentSubscriptions=new Map,this.paymentPollingIntervals=new Map}async connectPeer(e){return this.client._request("post","/connectpeer",e)}async listPeers(){return this.client._request("get","/listpeers")}async disconnectPeer(e){return this.client._request("post","/disconnectpeer",e)}async openChannel(e){return this.client._request("post","/openchannel",e)}async closeChannel(e){return this.client._request("post","/closechannel",e)}async listChannels(){return this.client._request("get","/listchannels")}async getChannelIdByTempId(e){return this.client._request("post","/getchannelid",e)}async createInvoice(e){return this.client._request("post","/lninvoice",e)}async payInvoice(e){return this.client._request("post","/sendpayment",e)}async decodeLnInvoice(e){return this.client._request("post","/decodelninvoice",e)}async getInvoiceStatus(e){return this.client._request("post","/invoicestatus",e)}async getPayment(e){return this.client._request("post","/getpayment",e)}async listPayments(){return this.client._request("get","/listpayments")}async keysend(e){return this.client._request("post","/keysend",e)}subscribeToPastPayments(e){const{onPayment:t,onError:n,pollingInterval:c=5e3,maxStoredIds:p=1e3,skipInitialFetch:o=!1}=e;if(!t||typeof t!="function")throw new Error("onPayment callback is required and must be a function");c<1e3&&console.warn("Warning: Polling interval less than 1000ms may cause performance issues");const h=`payment-${Date.now()}-${Math.random().toString(36).substr(2,9)}`;let w=Date.now();const l=new Set,u=new Map,m=()=>{if(l.size<=p)return;[...u.entries()].sort((s,r)=>s[1]-r[1]).map(s=>s[0]).slice(0,l.size-p).forEach(s=>{l.delete(s),u.delete(s)})};o||this.listPayments().then(i=>{i&&i.payments&&Array.isArray(i.payments)&&(i.payments.forEach(a=>{l.add(a.payment_hash),u.set(a.payment_hash,a.creation_time_ns||Date.now())}),m())}).catch(i=>{n&&typeof n=="function"&&n(i)});let _=c,y=0;const d=setInterval(async()=>{try{const i=await this.listPayments();if(i&&i.payments&&Array.isArray(i.payments)){const a=i.payments.filter(s=>l.has(s.payment_hash)?l.has(s.payment_hash)&&s.creation_time_ns>(u.get(s.payment_hash)||0)?(u.set(s.payment_hash,s.creation_time_ns||Date.now()),!0):!1:(l.add(s.payment_hash),u.set(s.payment_hash,s.creation_time_ns||Date.now()),!0));if(i.payments.length>0){const s=Math.max(...i.payments.map(r=>r.creation_time_ns||0));w=Math.max(w,s)}if(m(),a.length>0)a.forEach(s=>{t(s)}),y=0;else if(y++,y>5){const s=Math.min(c*3,c*(1+y/10));if(s!==_){_=s,clearInterval(d);const r=setInterval(d.callback,_);this.paymentPollingIntervals.set(h,r)}}}}catch(i){n&&typeof n=="function"&&n(i)}},c);return d.callback=d._onTimeout,this.paymentSubscriptions.set(h,{onPayment:t,onError:n,pollingInterval:c,currentPollingInterval:_,maxStoredIds:p}),this.paymentPollingIntervals.set(h,d),h}unsubscribeFromPayments(e){if(!this.paymentSubscriptions.has(e))return!1;const t=this.paymentPollingIntervals.get(e);return t&&(clearInterval(t),this.paymentPollingIntervals.delete(e)),this.paymentSubscriptions.delete(e),!0}}class v{constructor(e){this.client=e}async makerInitSwap(e){return this.client._request("post","/makerinit",e)}async makerExecuteSwap(e){return this.client._request("post","/makerexecute",e)}async takerAcceptSwap(e){return this.client._request("post","/taker",e)}async getSwap(e){return this.client._request("post","/getswap",e)}async listSwaps(){return this.client._request("get","/listswaps")}}class T{constructor(e){this.client=e}async getNodeInfo(){return this.client._request("get","/nodeinfo")}async getNodeState(){try{const e=await this.client._request("get","/nodestate");return e==null?void 0:e.state}catch(e){if(e.message.includes("Network Error"))return 0;throw e}}async getNetworkInfo(){return this.client._request("get","/networkinfo")}async checkIndexerUrl(e){return this.client._request("post","/checkindexerurl",e)}async checkProxyEndpoint(e){return this.client._request("post","/checkproxyendpoint",e)}async sendOnionMessage(e){return this.client._request("post","/sendonionmessage",e)}async signMessage(e){return this.client._request("post","/signmessage",e)}async initNode(e){return this.client._request("post","/init",e)}async unlockNode(e){return this.client._request("post","/unlock",e)}async lockNode(){return this.client._request("post","/lock")}async changePassword(e){return this.client._request("post","/changepassword",e)}}class P{constructor(e={},t=null){let n={};typeof e=="string"?(n.baseUrl=e,t&&(n.headers={Authorization:`Bearer ${t}`})):n=e,this.baseUrl=n.baseUrl||"http://localhost:3001",this.axios=k.create({baseURL:this.baseUrl,headers:{"Content-Type":"application/json",...n.headers},...n.axiosConfig}),this.onchain=new q(this),this.rgb=new b(this),this.lightning=new I(this),this.swaps=new v(this),this.node=new T(this)}async _request(e,t,n=null){var c,p;try{const o={method:e,url:t};return n!==null&&(e==="post"||e==="put"||e==="patch")?o.data=n:n!==null&&e==="get"&&(o.params=n),(await this.axios.request(o)).data}catch(o){if(o.response){const h=((c=o.response.data)==null?void 0:c.message)||((p=o.response.data)==null?void 0:p.error)||o.response.statusText;throw new Error(`API Error (${o.response.status}): ${h}`)}else throw o.request?new Error(`Network Error: Unable to reach RGB API at ${this.baseUrl}`):new Error(`Request Error: ${o.message}`)}}}exports.LightningMethods=I;exports.NodeMethods=T;exports.OnchainMethods=q;exports.RgbApiClient=P;exports.RgbMethods=b;exports.SwapMethods=v;exports.default=P;
//# sourceMappingURL=rgb-api-sdk.cjs.map
